# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  - group: passphrases

trigger:
  branches:
    include:
      - refs/heads/*
  paths:
    exclude:
      - docs/*
      - README.md
      - mm2src/README.md
      - etomic_build/*
      - iguana/Readme.md
      - .gitignore

pr: # https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#pr-trigger
  drafts: false

# https://docs.microsoft.com/ru-ru/azure/devops/pipelines/process/scheduled-triggers?view=azure-devops&tabs=yaml#scheduled-triggers
# Triggers clean checkout to compile from scratch, remove old builds artifacts, and free disk space on CI agents.
# https://github.com/KomodoPlatform/atomicDEX-API/blob/957fd856fb74d462058a5ad47ec46d79e3bf1d83/azure-pipelines-build-stage-job.yml#L20
schedules:
  - cron: "0 0 * * *"
    displayName: Scheduled clean midnight UTC build
    branches:
      include:
        - dev

stages:
  - stage: Lint
    displayName: Formatting, Clippy, and other checks
    jobs:
      - template: azure-pipelines-lint-stage-job.yml  # Template reference
        parameters:
          name: 'MM2_Lint_Linux'
          os: 'Linux'

      - template: azure-pipelines-lint-stage-job.yml  # Template reference
        parameters:
          name: 'MM2_Lint_MacOS'
          os: 'Darwin'

      - template: azure-pipelines-lint-stage-job.yml  # Template reference
        parameters:
          name: 'MM2_Lint_Win'
          os: 'Windows_NT'

  - stage: WASM
    displayName: WASM build and test
    condition: succeeded('Lint')
    jobs:
      - template: azure-pipelines-wasm-stage-job.yml  # Template reference
        parameters:
          name: 'MM2_WASM_Linux'
          os: 'Linux'
          bob_passphrase: 'BOB_PASSPHRASE_LINUX'
          bob_userpass: 'BOB_USERPASS_LINUX'
          alice_passphrase: 'ALICE_PASSPHRASE_LINUX'
          alice_userpass: 'ALICE_USERPASS_LINUX'
          telegram_api_key: 'TELEGRAM_API_KEY'

  - stage: Build
    displayName: Build and test Debug
    condition: succeeded('WASM')
    jobs:
      - template: azure-pipelines-build-stage-job.yml  # Template reference
        parameters:
          name: 'MM2_Build_Linux'
          os: 'Linux'
          bob_passphrase: 'BOB_PASSPHRASE_LINUX'
          bob_userpass: 'BOB_USERPASS_LINUX'
          alice_passphrase: 'ALICE_PASSPHRASE_LINUX'
          alice_userpass: 'ALICE_USERPASS_LINUX'
          telegram_api_key: 'TELEGRAM_API_KEY'

      - template: azure-pipelines-build-stage-job.yml  # Template reference
        parameters:
          name: 'MM2_Build_MacOS'
          os: 'Darwin'
          bob_passphrase: 'BOB_PASSPHRASE_MAC'
          bob_userpass: 'BOB_USERPASS_MAC'
          alice_passphrase: 'ALICE_PASSPHRASE_MAC'
          alice_userpass: 'ALICE_USERPASS_MAC'
          telegram_api_key: 'TELEGRAM_API_KEY'

      - template: azure-pipelines-build-stage-job.yml  # Template reference
        parameters:
          name: 'MM2_Build_Windows'
          os: 'Windows_NT'
          bob_passphrase: 'BOB_PASSPHRASE_WIN'
          bob_userpass: 'BOB_USERPASS_WIN'
          alice_passphrase: 'ALICE_PASSPHRASE_WIN'
          alice_userpass: 'ALICE_USERPASS_WIN'
          telegram_api_key: 'TELEGRAM_API_KEY'
