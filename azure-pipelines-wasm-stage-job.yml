# Job template for MM2 Build

parameters:
  name: ''  # defaults for any parameters that aren't specified
  os: ''
  bob_passphrase: ''
  bob_userpass: ''
  alice_passphrase: ''
  alice_userpass: ''
  telegram_api_key: ''

jobs:
  - job: ${{ parameters.name }}
    timeoutInMinutes: 0 # 0 means infinite for self-hosted agent
    pool:
      name: Default
      demands: agent.os -equals ${{ parameters.os }}
    steps:
      - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
        clean: ${{ eq( variables['Build.Reason'], 'Schedule' ) }} # clean up only on Scheduled build
      - bash: |
          if [ $CLEANUP = "true" ]
          then
            git clean -ffdx
          fi
        displayName: Clean Up
        failOnStderr: false
        continueOnError: true
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#set-a-job-scoped-variable-from-a-script
      - bash: |
          export TAG="$(git rev-parse --short=9 HEAD)"
          echo "##vso[task.setvariable variable=COMMIT_HASH]${TAG}"
        displayName: Setup ENV
      # Build WASM.
      - bash: |
          rm -rf upload
          mkdir upload
          VERSION=2.1.$(Build.BuildId)_$(Build.SourceBranchName)_$(COMMIT_HASH)_$(Agent.OS)_Release
          if ! grep -q $VERSION MM_VERSION; then
            echo $VERSION > MM_VERSION
          fi
          cat MM_VERSION
          CC=clang-8 wasm-pack build mm2src/mm2_main --release --target web --out-dir ../../target/target-wasm-release
        displayName: 'Build MM2 WASM Release'
        condition: ne ( variables['Build.Reason'], 'PullRequest' )
        env:
          MANUAL_MM_VERSION: true
      - bash: |
          CC=clang-8 cargo test --package mm2_main --target wasm32-unknown-unknown --release --bin mm2
        displayName: 'Test MM2 WASM'
        env:
          WASM_BINDGEN_TEST_TIMEOUT: 120
          GECKODRIVER: '/home/azureagent/wasm/geckodriver'
          BOB_PASSPHRASE: $(${{ parameters.bob_passphrase }})
          ALICE_PASSPHRASE: $(${{ parameters.alice_passphrase }})
          MANUAL_MM_VERSION: true
        condition: or( eq( variables['Build.Reason'], 'PullRequest' ), eq( variables['Build.SourceBranchName'], 'mm2.1' ), eq( variables['Build.SourceBranchName'], 'dev' ) )
      - bash: |
          cd target/target-wasm-release/
          zip ../../upload/mm2-$(COMMIT_HASH)-$(Agent.OS)-Wasm-Release mm2_bg.wasm mm2.js snippets -r
        displayName: 'Prepare release WASM build upload Linux'
        condition: ne ( variables['Build.Reason'], 'PullRequest' )
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/copy-files-over-ssh?view=vsts
      - task: CopyFilesOverSSH@0
        inputs:
          sshEndpoint: nightly_build_server
          sourceFolder: 'upload' # Optional
          contents: "**"
          targetFolder: "uploads/$(Build.SourceBranchName)" # Optional
          overwrite: true
        displayName: 'Upload nightly'
        condition: ne ( variables['Build.Reason'], 'PullRequest' )