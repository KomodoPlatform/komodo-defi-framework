# Job template for MM2 build

parameters:
  name: ''  # defaults for any parameters that aren't specified
  os: ''
  bob_passphrase: ''
  bob_userpass: ''
  alice_passphrase: ''
  alice_userpass: ''

jobs:
  - job: ${{ parameters.name }}
    timeoutInMinutes: 0 # 0 means infinite for self-hosted agent
    pool:
      name: Default
      demands: agent.os -equals ${{ parameters.os }}
    steps:
      - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
        clean: ${{ eq( variables['Build.Reason'], 'Schedule' ) }} # clean up only on Scheduled build
      - powershell: |
          .\marketmaker_build_depends.cmd
        displayName: Build Windows deps
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
      - bash: |
          rm -rf upload
          mkdir upload
          touch mm2src/common/build.rs
          cargo build -vv
        displayName: 'Build MM2'
      # Cargo uses CPU threads count by default running only 2 concurrent tests on Linux.
      # Explicit --test-threads=8 makes the process faster
      - bash: |
          cargo test --all -- --test-threads=8
        displayName: 'Test MM2'
        timeoutInMinutes: 22
        env:
          BOB_PASSPHRASE: $(${{ parameters.bob_passphrase }})
          BOB_USERPASS: $(${{ parameters.bob_userpass }})
          ALICE_PASSPHRASE: $(${{ parameters.alice_passphrase }})
          ALICE_USERPASS: $(${{ parameters.alice_userpass }})
      - bash: |
          cp -r target/debug/mm2 upload/mm2-$(COMMIT_HASH)-$(Agent.OS)
        displayName: 'Prepare upload Linux/MacOS'
        condition: ne( variables['Agent.OS'], 'Windows_NT' )
      - powershell: |
          7z a .\upload\mm2-win-$(COMMIT_HASH).zip .\target\debug\mm2.exe .\target\debug\*.dll .\target\debug\LICENSE* "$Env:windir\system32\msvcr100.dll" "$Env:windir\system32\msvcp140.dll" "$Env:windir\system32\vcruntime140.dll"
        displayName: 'Prepare upload Windows'
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/copy-files-over-ssh?view=vsts
      - task: CopyFilesOverSSH@0
        inputs:
          sshEndpoint: nightly_build_server
          sourceFolder: 'upload' # Optional
          contents: "**"
          targetFolder: "uploads/$(Build.SourceBranchName)" # Optional
        displayName: 'Upload nightly'