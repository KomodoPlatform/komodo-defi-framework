syntax = "proto3";

package komodefi.swap_v2.pb;

message SignedMessage {
  bytes from = 1;
  bytes signature = 2;
  bytes payload = 3;
}

message MakerNegotiation {
  uint64 started_at = 1;
  uint64 payment_locktime = 2;
  bytes secret_hash = 3;
  bytes maker_coin_htlc_pub = 4;
  bytes taker_coin_htlc_pub = 5;
  optional bytes maker_coin_swap_contract = 6;
  optional bytes taker_coin_swap_contract = 7;
}

message Abort {
  string reason = 1;
}

message TakerNegotiationData {
  uint64 started_at = 1;
  uint64 payment_locktime = 2;
  bytes taker_secret_hash = 3;
  bytes maker_coin_htlc_pub = 4;
  bytes taker_coin_htlc_pub = 5;
  optional bytes maker_coin_swap_contract = 6;
  optional bytes taker_coin_swap_contract = 7;
}

message TakerNegotiation {
  oneof action {
      TakerNegotiationData continue = 1;
      Abort abort = 2;
  }
}

message MakerNegotiated {
  bool negotiated = 1;
  // used when negotiated is false
  optional string reason = 2;
}

message TakerFundingInfo {
  bytes tx_bytes = 1;
  optional bytes next_step_instructions = 2;
}

message TakerFundingSpendPreimage {
  bytes signature = 1;
  bytes tx_preimage = 2;
}

message TakerPaymentInfo {
  bytes tx_bytes = 1;
  optional bytes next_step_instructions = 2;
}

message MakerPaymentInfo {
  bytes tx_bytes = 1;
  optional bytes next_step_instructions = 2;
}

message TakerPaymentSpendPreimage {
  bytes signature = 1;
  bytes tx_preimage = 2;
}

message SwapMessage {
  oneof inner {
    MakerNegotiation maker_negotiation = 1;
    TakerNegotiation taker_negotiation = 2;
    MakerNegotiated maker_negotiated = 3;
    TakerFundingInfo taker_funding_info = 4;
    MakerPaymentInfo maker_payment_info = 5;
    TakerFundingSpendPreimage taker_funding_spend_preimage = 6;
    TakerPaymentInfo taker_payment_info = 7;
    TakerPaymentSpendPreimage taker_payment_spend_preimage = 8;
  }
}
