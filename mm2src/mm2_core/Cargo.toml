[package]
name = "mm2_core"
version = "0.1.0"
edition = "2021"

[lib]
doctest = false

[features]
new-db-arch = []

[dependencies]
arrayref = "0.3"
async-std = { workspace = true, features = ["unstable"] }
async-trait.workspace = true
cfg-if.workspace = true
common = { path = "../common" }
compatible-time.workspace = true
db_common = { path = "../db_common" }
derive_more.workspace = true
futures = { workspace = true, features = ["compat", "async-await", "thread-pool"] }
gstuff.workspace = true 
hex.workspace = true
lazy_static.workspace = true
libp2p = { git = "https://github.com/KomodoPlatform/rust-libp2p.git", tag = "k-0.52.12", default-features = false, features = ["identify"] }
mm2_err_handle = { path = "../mm2_err_handle" }
mm2_event_stream = { path = "../mm2_event_stream" }
mm2_metrics = { path = "../mm2_metrics" }
primitives = { path = "../mm2_bitcoin/primitives" }
rand = { version = "0.7", features = ["std", "small_rng", "wasm-bindgen"] }
serde.workspace = true
ser_error = { path = "../derives/ser_error" }
ser_error_derive = { path = "../derives/ser_error_derive" }
serde_json = { workspace = true, features = ["preserve_order", "raw_value"] }
shared_ref_counter = { path = "../common/shared_ref_counter" }
uuid = { version = "1.2.2", features = ["fast-rng", "serde", "v4"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
mm2_rpc = { path = "../mm2_rpc", features = [ "rpc_facilities" ] }
timed-map = { version = "1.3", features = ["rustc-hash", "wasm"] }
wasm-bindgen-test.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
rustls = { version = "0.21", default-features = false }
tokio = { version = "1.20", features = ["io-util", "rt-multi-thread", "net"] }
timed-map = { version = "1.3", features = ["rustc-hash"] }
