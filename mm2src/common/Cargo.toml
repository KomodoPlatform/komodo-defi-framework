[package]
name = "common"
version = "0.1.0"
links = "marketmaker-mainnet-lib"
edition = "2018"

[lib]
name = "common"
path = "common.rs"
doctest = false

[features]
for-tests = []
track-ctx-pointer = ["shared_ref_counter/enable", "shared_ref_counter/log"]

[dependencies]
arrayref = "0.3"
async-trait.workspace = true
backtrace = "0.3"
bytes.workspace = true
cfg-if.workspace = true
compatible-time.workspace = true
crossbeam.workspace = true
env_logger = "0.9.3"
derive_more.workspace = true
fnv = "1.0.6"
futures01.workspace = true
futures = { workspace = true, features = ["compat", "async-await", "thread-pool"] }
futures-timer = "3.0"
gstuff.workspace = true
hex.workspace = true
http.workspace = true
http-body = "0.1"
itertools.workspace = true
lazy_static.workspace = true
log = "0.4.17"
parking_lot = { workspace = true, features = ["nightly"] }
parking_lot_core = { version = "0.6", features = ["nightly"] }
paste = "1.0"
primitive-types = "0.11.1"
rand = { version = "0.7", features = ["std", "small_rng"] }
rustc-hash = "2.0"
regex = "1"
serde.workspace = true
serde_derive.workspace = true
serde_json = { version = "1", features = ["preserve_order", "raw_value"] }
ser_error = { path = "../derives/ser_error" }
ser_error_derive = { path = "../derives/ser_error_derive" }
sha2 = "0.10"
shared_ref_counter = { path = "shared_ref_counter", optional = true }
uuid = { version = "1.2.2", features = ["fast-rng", "serde", "v4"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
chrono = { workspace = true, features = ["wasmbind"] }
js-sys = "0.3.27"
serde_repr = "0.1.6"
serde-wasm-bindgen = "0.4.3"
wasm-bindgen = "0.2.86"
wasm-bindgen-futures = "0.4.21"
wasm-bindgen-test = { version = "0.3.2" }
web-sys = { version = "0.3.55", features = ["console", "CloseEvent", "DomException", "ErrorEvent", "IdbDatabase", "IdbCursor", "IdbCursorWithValue", "IdbFactory", "IdbIndex", "IdbIndexParameters", "IdbObjectStore", "IdbObjectStoreParameters", "IdbOpenDbRequest", "IdbKeyRange", "IdbTransaction", "IdbTransactionMode", "IdbVersionChangeEvent", "MessageEvent", "WebSocket"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
anyhow = "1.0"
chrono.workspace = true 
hyper = { version = "0.14.26", features = ["client", "http2", "server", "tcp"] }
# using webpki-tokio to avoid rejecting valid certificates
# got "invalid certificate: UnknownIssuer" for https://ropsten.infura.io on iOS using default-features
hyper-rustls = { version = "0.24", default-features = false, features = ["http1", "http2", "webpki-tokio"] }
libc.workspace = true
lightning = "0.0.113"
tokio = { version = "1.20", features = ["io-util", "rt-multi-thread", "net"] }

[target.'cfg(windows)'.dependencies]
winapi = "0.3"

[target.'cfg(not(windows))'.dependencies]
findshlibs = "0.5"

[build-dependencies]
cc = "1.0"
gstuff.workspace = true
